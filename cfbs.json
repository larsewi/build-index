{
  "name": "index",
  "description": "The official (default) index of modules for CFEngine Build",
  "type": "index",
  "index": {
    "all-packages-upgraded": {
      "description": "This module ensures that the package manager data is updated and all upgradeable packages are upgraded",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/craigcomstock/cfengine-security-hardening",
      "by": "https://github.com/craigcomstock",
      "version": "0.0.1",
      "commit": "b6b7ea9c28d7ae7514bfedf4c564a3eb23bf1798",
      "subdirectory": "all-packages-upgraded",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./all_packages_upgraded_policy.cf services/autorun/all_packages_upgraded_policy.cf"
      ]
    },
    "ansible": { "alias": "promise-type-ansible" },
    "autorun": {
      "description": "Enable autorun functionality",
      "tags": ["supported", "management"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "1.0.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "management/autorun",
      "steps": ["json def.json def.json"]
    },
    "bash-lib": { "alias": "library-for-promise-types-in-bash" },
    "cfengine-supported": {
      "description": "Inventory the support status for the current version of CFEngine.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-supported",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "6a09cc850423a063533ffe19e9066753952b9d8d",
      "steps": [
        "copy ./inventory-cfengine-version-support-status.cf services/cfengine-supported/",
        "json ./cfbs/def.json def.json"
      ]
    },
    "cir": { "alias": "client-initiated-reporting" },
    "client-initiated": { "alias": "client-initiated-reporting" },
    "client-initiated-reporting": {
      "description": "Enable client initiated reporting and disable pull collection",
      "tags": ["experimental", "reporting"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/cfengine",
      "version": "0.1.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "reporting/client-initiated-reporting",
      "steps": ["json def.json def.json"]
    },
    "compliance-report-imports": {
      "name": "compliance-report-imports",
      "description": "Keep compliance report definitions up to date",
      "tags": ["experimental", "cfengine-enterprise"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.6",
      "commit": "6f6996bc36c07c91bcf9da9276d434cc0426ee97",
      "subdirectory": "./compliance-report-imports",
      "dependencies": ["autorun"],
      "steps": ["copy ./compliance-report-imports.cf services/autorun/"]
    },
    "compliance-report-os-is-vendor-supported": {
      "name": "compliance-report-os-is-vendor-supported",
      "description": "Compliance report definition for checking if the current OS version is supported by the vendor",
      "tags": ["experimental", "compliance-report", "cfengine-enterprise"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.2",
      "commit": "d9e0aad225535b2b16ba2126e8302f8ffc5e7d38",
      "subdirectory": "./compliance-report-os-is-vendor-supported",
      "dependencies": ["compliance-report-imports"],
      "steps": [
        "copy ./os-is-vendor-supported.json .no-distrib/compliance-report-definitions/os-is-vendor-supported.json"
      ]
    },
    "create-single-file": {
      "description": "Create a single file.",
      "tags": ["experimental"],
      "repo": "https://github.com/larsewi/cfbs-test-modules",
      "by": "https://github.com/larsewi",
      "version": "0.0.1",
      "commit": "d95774c8c69a2895c687624851ef4ad9d5e0d02d",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./create-single-file.cf services/autorun/create-single-file.cf"
      ],
      "input": [
        {
          "namespace": "my_namespace",
          "bundle": "my_bundle",
          "name": "filename",
          "comment": "This is a comment.",
          "prompt": {
            "string": {
              "label": "Filename",
              "question": "What file should this module create?",
              "default": "/tmp/create-single-file.txt"
            }
          }
        }
      ]
    },
    "cve-2021-3156-sudo": {
      "description": "This module inventories and remediates CVE-2021-3156, a heap overflow in sudo that allows privilege escalation.",
      "tags": ["supported", "security", "cve", "sudo"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "029ec4eac0d3d9b3bf7c8dc361db71f4796fc101",
      "subdirectory": "./cves/cve-2021-3156-sudo/",
      "steps": [
        "copy ./cve-2021-3156-sudo.cf services/security-hardening/cves/cve-2021-3156-sudo/",
        "json cfbs/def.json def.json"
      ]
    },
    "cve-2021-44228-log4j": {
      "description": "This module leverages yahoo/check-log4j to scan for files potentially vulnerable to CVE-2021-44228, which allows arbitrary code execution.",
      "tags": ["supported", "security", "cve"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.2",
      "commit": "a61b18704dce8893a37c67d19be62c325066c164",
      "subdirectory": "./cves/cve-2021-44228-log4j/",
      "steps": [
        "copy ./cve-2021-44228-log4j-inventory-log4shell.cf services/security-hardening/cves/cve-2021-44228-log4j/",
        "json cfbs/def.json def.json"
      ]
    },
    "default-encrypt-method-sha512": {
      "description": "Sets the default password hashing algorithm to SHA-512 (encrypt_method in /etc/login.defs)",
      "tags": ["supported", "security"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "default-encrypt-method-sha512",
      "steps": [
        "json cfbs/def.json def.json",
        "copy policy/default-encrypt-method-sha512.cf services/security-hardening/default-encrypt-method-sha512/default-encrypt-method-sha512.cf"
      ]
    },
    "demo": {
      "description": "Enables convenient and insecure settings for demoing CFEngine",
      "tags": ["management", "experimental"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "1.0.0",
      "commit": "05bf5e5b1c014018a7b93a524e035c1a21bcffa4",
      "subdirectory": "management/demo",
      "dependencies": ["autorun", "every-minute"],
      "steps": ["json def.json def.json"]
    },
    "every-minute": {
      "description": "Make policy fetching, evaluation, and reporting happen every minute",
      "tags": ["management", "experimental"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "1.0.0-1",
      "commit": "74b6776ca4e120285f9c44e68ccf79eef84accfd",
      "subdirectory": "management/every-minute",
      "steps": ["json def.json def.json"]
    },
    "ftp-server-not-installed": {
      "description": "This module has a policy file which makes sure the ftp server package is not installed on the system",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/craigcomstock/cfengine-security-hardening",
      "by": "https://github.com/craigcomstock",
      "version": "0.0.1",
      "commit": "b6b7ea9c28d7ae7514bfedf4c564a3eb23bf1798",
      "subdirectory": "ftp-server-not-installed",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./ftp_server_policy.cf services/autorun/ftp_server_policy.cf"
      ]
    },
    "git": { "alias": "promise-type-git" },
    "groups": { "alias": "promise-type-groups" },
    "http": { "alias": "promise-type-http" },
    "inventory-clamav": {
      "description": "Inventory useful information from ClamAV (version, definitions version, definitions date)",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-clamav",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "1d872d1771921b0f8d92da56899d8b61d37dd5ca",
      "steps": [
        "copy policy/main.cf services/inventory-clamav/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-etc-hosts": {
      "description": "Inventory entries from /etc/hosts",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-etc-hosts",
      "by": "https://github.com/nickanderson",
      "version": "0.1.3",
      "commit": "c4cac4bfa0f2c0a6caf83517dcaaaf17e70808a0",
      "steps": [
        "copy policy/main.cf services/inventory-etc-hosts/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-etc-login-defs": {
      "name": "inventory-etc-login-defs",
      "description": "Inventory useful bits from /etc/login.defs",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-etc-login-defs",
      "by": "https://github.com/nickanderson",
      "version": "0.0.3",
      "commit": "8f4747e4856737aa44fd96b9b8d38d941afec9f3",
      "steps": [
        "copy ./inventory-etc-login-defs.cf services/inventory-etc-login-defs/inventory-etc-login-defs.cf",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-fips-mode-setup": {
      "description": "Inventory the status of fips-mode-setup",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-fips-mode-setup",
      "by": "https://github.com/nickanderson",
      "version": "0.1.1",
      "commit": "757aa0b568441a13d92d4df2d597760c6b7cde50",
      "steps": [
        "copy policy/main.cf services/inventory-fips-mode-setup/main.cf",
        "json augments.json def.json"
      ]
    },
    "inventory-kernel-boot-params": {
      "description": "Inventory kernel parameters set during system boot",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-kernel-boot-params",
      "by": "https://github.com/nickanderson",
      "version": "0.1.2",
      "commit": "ab79409970b97831cfb9552d98ca6a8f455e11d4",
      "steps": [
        "copy policy/main.cf services/inventory-kernel-boot-params/main.cf",
        "json augments.json def.json"
      ]
    },
    "inventory-kernel-settings-sysctl-conf": {
      "description": "Inventory settings from /etc/sysctl.conf.",
      "tags": ["inventory", "kernel"],
      "repo": "https://github.com/nickanderson/cfengine-sysctl",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "69149b9d15874c4f584441cd40019a79a92ad8f2",
      "subdirectory": "policy/inventory-kernel-settings-sysctl-conf",
      "steps": [
        "copy ./main.cf services/inventory-kernel-settings-sysctl-conf/",
        "copy ./README.org services/inventory-kernel-settings-sysctl-conf/",
        "json ./cfbs/def.json def.json"
      ]
    },
    "inventory-kernel-settings-sysctl-current": {
      "description": "Inventory sysctl settings current state.",
      "tags": ["inventory", "kernel", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-sysctl",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "69149b9d15874c4f584441cd40019a79a92ad8f2",
      "subdirectory": "policy/inventory-kernel-settings-sysctl-current",
      "steps": [
        "copy ./main.cf services/inventory-kernel-settings-sysctl-current/",
        "copy ./README.org services/inventory-kernel-settings-sysctl-current/",
        "json ./cfbs/def.json def.json"
      ]
    },
    "inventory-lastlog": {
      "description": "Inventory users who have logged in and when.",
      "tags": ["inventory", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-lastlog",
      "by": "https://github.com/nickanderson",
      "version": "0.1.1",
      "commit": "7436a6ca9d1a159e6083768b9c06d9b1cbb189a0",
      "steps": [
        "copy policy/main.cf services/inventory-lastlog/",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-local-users": {
      "description": "Inventory the local users on the system with their attributes",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_all/",
      "dependencies": ["library-parsed-local-users"],
      "steps": [
        "copy ./inventory_passwd_users_all.cf services/local-users/inventory_passwd_users_all/",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-local-users-locked": {
      "name": "inventory-local-users-locked",
      "description": "Inventory the local users on the system that are locked",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_locked/",
      "dependencies": ["library-parsed-local-users"],
      "steps": [
        "copy ./inventory_passwd_users_locked.cf services/local-users/inventory_passwd_users_locked/",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-local-users-non-root-has-uid-0": {
      "description": "Inventory the non-root users that have uid 0",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.5",
      "commit": "fef5d94170f8119eda8f5bf8316acf5896fbac22",
      "subdirectory": "inventory_non_root_users_with_uid_zero/",
      "dependencies": ["library-parsed-local-users"],
      "steps": [
        "copy ./inventory-non-root-users-with-uid-zero.cf services/local-users/inventory_non_root_users_with_uid_zero/inventory-non-root-users-with-uid-zero.cf",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-local-users-password-empty": {
      "name": "inventory-local-users-password-empty",
      "description": "Inventory the local users on the system that do not have a password set",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_password_empty",
      "dependencies": ["library-parsed-local-users"],
      "steps": [
        "copy ./inventory_passwd_users_password_empty.cf services/local-users/inventory_passwd_users_password_empty/",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-local-users-password-hashing-algorithm": {
      "name": "inventory-local-users-password-hashing-algorithm",
      "description": "Inventory password hashing algorithms in use by local users",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "inventory_passwd_users_password_hashing_algorithm",
      "dependencies": ["library-parsed-local-users"],
      "steps": [
        "copy ./inventory_local_user_pw_hashing_algorithm.cf services/local-users/inventory_passwd_users_password_hashing_algorithm/",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-ssh-host-key-fingerprints": {
      "description": "This module contains policy to inventory the ssh host key fingerprints.",
      "tags": ["inventory", "security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-ssh",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "337a0b1b2df4eb2d13cecc9718f56c23f54fffa8",
      "subdirectory": "policy/inventory/host-key-fingerprints/",
      "steps": [
        "copy ./inventory-ssh-host-key-fingerprints.cf services/ssh/inventory/host-key-fingerprints/inventory-ssh-host-key-fingerprints.cf",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-sudoers": {
      "description": "Inventory users with sudo access.",
      "tags": ["supported", "inventory", "security", "sudo"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-sudoers",
      "by": "https://github.com/nickanderson",
      "version": "1.0.2",
      "commit": "ba9768f0e09914e41dae95fbf81caed90c1e6ed4",
      "steps": [
        "copy ./policy/main.cf services/inventory-sudoers/main.cf",
        "json ./cfbs/def.json def.json"
      ]
    },
    "inventory-systemd": {
      "description": "Inventory interesting things from systemd",
      "tags": ["supported", "inventory", "systemd"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-systemd",
      "by": "https://github.com/nickanderson",
      "version": "0.1.0",
      "commit": "4b9c0708173d3b5f0855a76063781e2258465788",
      "steps": [
        "copy ./policy/main.cf services/inventory-systemd/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    "inventory-writable-directories-in-root-path": {
      "description": "This module inventories directories in root's $PATH that are world or group writable.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-writable-directories-in-root-path",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "11fe0552d0cfde9d7280c629cea18cb0e2fd2a8b",
      "subdirectory": "./inventory-writable-directories-in-root-path/",
      "steps": [
        "copy ./inventory-world-group-writable-root-path.cf services/world-writable-directories-in-root-path/",
        "json ./cfbs/def.json def.json"
      ]
    },
    "inventory-yum-update-info": {
      "description": "This module adds information about security updates from 'yum updateinfo' to inventory",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.1",
      "commit": "c89da2dbdf2f8a4baf7b6646d2e15e98a00ff365",
      "subdirectory": "inventory-yum-update-info",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./inventory_yum_update_info.cf services/autorun/inventory_yum_update_info.cf"
      ]
    },
    "kernel-settings-sysctl-conf": {
      "description": "Manage settings in /etc/sysctl.conf.",
      "tags": ["management", "kernel"],
      "repo": "https://github.com/nickanderson/cfengine-sysctl",
      "by": "https://github.com/nickanderson",
      "version": "1.0.0",
      "commit": "0d4fd85fa22ee6c52ace5222202b3290a5902862",
      "subdirectory": "policy/kernel-settings-sysctl-conf",
      "steps": [
        "copy ./main.cf services/kernel-settings-sysctl-conf/",
        "copy ./README.org services/kernel-settings-sysctl-conf/",
        "json ./cfbs/def.json def.json"
      ]
    },
    "lib-fim": { "alias": "library-file-integrity-monitoring" },
    "lib-sshd-config": { "alias": "library-sshd-config" },
    "library-file-integrity-monitoring": {
      "description": "Monitor key files for changes",
      "tags": ["library", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-file_integrity_monitoring",
      "by": "https://github.com/nickanderson",
      "version": "0.1.2",
      "commit": "8afb5e4f482c4d1564cfe56263bc8e38c33741ca",
      "steps": [
        "copy policy/monitor_file_paths_tagged_all_changes.cf services/file_integrity_monitoring/",
        "json cfbs/def.json def.json"
      ]
    },
    "library-for-promise-types-in-bash": {
      "description": "Library enabling promise types implemented in bash",
      "tags": ["supported", "library"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/Lex-2008",
      "version": "0.1.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "libraries/bash/",
      "steps": ["copy cfengine.sh modules/promises/"]
    },
    "library-for-promise-types-in-python": {
      "description": "Library enabling promise types implemented in python",
      "tags": ["supported", "library"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/cfengine",
      "version": "0.1.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "libraries/python/",
      "steps": ["copy cfengine.py modules/promises/"]
    },
    "library-parsed-local-users": {
      "name": "library-parsed-local-users",
      "description": "Parse local users from /etc/passwd on the system with their attributes from /etc/shadow",
      "tags": ["supported", "library"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.4",
      "commit": "3b50be1e5ab09578109921b8f287603b37811350",
      "subdirectory": "parsed_etc_passwd_shadow/",
      "steps": [
        "copy ./parsed_etc_passwd_shadow.cf services/local-users/parsed_etc_passwd_shadow/",
        "json cfbs/def.json def.json"
      ]
    },
    "library-sshd-config": {
      "description": "This module provides policy for managing sshd configuration.",
      "tags": ["library", "security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-ssh",
      "by": "https://github.com/nickanderson",
      "version": "0.1.0",
      "commit": "abff34c08bf27af56c4c3939bbb6f848eac7fb8d",
      "subdirectory": "modules/library-sshd-config/",
      "steps": [
        "copy ./global-key-values.cf services/library-sshd-config/",
        "json cfbs/def.json def.json"
      ]
    },
    "lynis": {
      "description": "CFEngine policy to automate the installation, running, and reporting of CISOfy's lynis system audits",
      "tags": ["security", "compliance", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-lynis",
      "by": "https://github.com/nickanderson",
      "version": "0.2.1",
      "commit": "f1bf2c0c9f6ccca54085f05e914351aad8e52852",
      "steps": [
        "copy policy/main.cf services/lynis/main.cf",
        "json cfbs/def.json def.json"
      ]
    },
    "masterfiles": {
      "description": "Official CFEngine Masterfiles Policy Framework (MPF)",
      "tags": ["supported", "base"],
      "repo": "https://github.com/cfengine/masterfiles",
      "by": "https://github.com/cfengine",
      "version": "3.18.2",
      "commit": "a87b7fea6f7a88808b327730a4ba784a3dc664eb",
      "steps": ["run ./prepare.sh -y", "copy ./ ./"]
    },
    "migrate2rocky": {
      "description": "Unattended migration of CentOS 8 hosts to Rocky Linux",
      "tags": ["experimental"],
      "repo": "https://github.com/nickanderson/cfengine-migrate2rocky",
      "by": "https://github.com/nickanderson",
      "version": "0.1.0",
      "commit": "332dc89a479503bede5ca986092d2b95ad183129",
      "dependencies": ["promise-type-git"],
      "steps": [
        "copy policy/main.cf services/migrate2rocky/main.cf",
        "json augments.json def.json"
      ]
    },
    "mpf": { "alias": "masterfiles" },
    "ntp-maxpoll": {
      "description": "This module ensures that maxpoll is configured to 10 unless default:ntp_maxpoll._config[maxpoll] is defined in which case that value will be used.",
      "tags": ["supported", "security", "management"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.3",
      "commit": "e2519214e8a29c7f37a36ca8a4beec687712448d",
      "subdirectory": "./ntp-maxpoll/",
      "steps": [
        "copy ./ntp-maxpoll.cf services/security-hardening/ntp-maxpoll/",
        "json cfbs/def.json def.json"
      ]
    },
    "openldap-server-not-installed": {
      "description": "This module has a policy file which makes sure the openldap server package is not installed on the system",
      "tags": ["security", "compliance", "experimental"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.1",
      "commit": "2092c748f5c1a6e3b5b1aeacd486fa38ba862226",
      "subdirectory": "openldap-server-not-installed",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./openldap_server_policy.cf services/autorun/openldap_server_policy.cf"
      ]
    },
    "prelinking-disabled": {
      "description": "Disable prelinking.",
      "tags": ["supported", "security"],
      "repo": "https://github.com/larsewi/cfengine-prelinking-disabled",
      "by": "https://github.com/larsewi",
      "version": "1.0.2",
      "commit": "1005d80031b2a68f31018736b02e8eba8d4ef20b",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./disable_prelinking.cf services/autorun/disable_prelinking.cf"
      ]
    },
    "promise-type-ansible": {
      "description": "Promise type to run ansible playbooks",
      "tags": ["supported", "promise-type"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/tranchitella",
      "version": "0.1.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "promise-types/ansible/",
      "dependencies": ["library-for-promise-types-in-python"],
      "steps": [
        "copy ansible_promise.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "promise-type-git": {
      "description": "Promise type to manage git repos",
      "tags": ["supported", "promise-type"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/tranchitella",
      "version": "0.1.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "promise-types/git/",
      "dependencies": ["library-for-promise-types-in-python"],
      "steps": [
        "copy git.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "promise-type-groups": {
      "description": "Experimental promise type to manage local user groups",
      "tags": ["supported", "promise-type", "experimental"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/larsewi",
      "version": "0.1.3",
      "commit": "fd255fbdcc6cac0521ab8de2c543c684fadb16fa",
      "subdirectory": "promise-types/groups/",
      "dependencies": ["library-for-promise-types-in-python"],
      "steps": [
        "copy groups.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "promise-type-http": {
      "description": "Promise type to perform HTTP(S) requests from policy",
      "tags": ["supported", "promise-type", "http"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/vpodzime",
      "version": "1.0.0",
      "commit": "c861789d4b376147d904fccd76963a92e65eaa97",
      "subdirectory": "promise-types/http/",
      "dependencies": ["library-for-promise-types-in-python"],
      "steps": [
        "copy http_promise_type.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "promise-type-systemd": {
      "description": "Promise type to manage systemd services",
      "tags": ["supported", "promise-type", "systemd"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/tranchitella",
      "version": "0.1.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "promise-types/systemd/",
      "dependencies": ["library-for-promise-types-in-python"],
      "steps": [
        "copy systemd.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "python-lib": { "alias": "library-for-promise-types-in-python" },
    "root-path-enforce-permissions": {
      "description": "This module enforces that directories in root's $PATH are not world or group writable.",
      "tags": ["supported", "management", "security"],
      "repo": "https://github.com/nickanderson/cfengine-writable-directories-in-root-path",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "11fe0552d0cfde9d7280c629cea18cb0e2fd2a8b",
      "subdirectory": "./root-path-enforce-permissions/",
      "dependencies": ["inventory-writable-directories-in-root-path"],
      "steps": [
        "copy ./root-path-enforce-group-other-not-writable.cf services/world-writable-directories-in-root-path/",
        "json ./cfbs/def.json def.json"
      ]
    },
    "scl": { "alias": "surf-cfengine-library" },
    "ssh-ciphers-strong": {
      "description": "This module ensures that the SSH daemon uses strong ciphers",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.4",
      "commit": "7c5e3638ddcf2ba097644eefe0a3bc9d7f2269e6",
      "subdirectory": "./ssh-ciphers-strong/",
      "dependencies": ["library-sshd-config"],
      "steps": [
        "copy ./ssh-ciphers-strong.cf services/security-hardening/ssh-ciphers-strong/",
        "json cfbs/def.json def.json"
      ]
    },
    "ssh-max-auth-tries": {
      "description": "This module limits the maximum authentication attempts (default to 3)",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "./ssh-max-auth-tries/",
      "dependencies": ["library-sshd-config"],
      "steps": [
        "copy ./ssh-max-auth-tries.cf services/security-hardening/ssh-max-auth-tries/",
        "json cfbs/def.json def.json"
      ]
    },
    "ssh-permit-empty-passwords-no": {
      "description": "This module ensures that PermitEmptyPasswords is set to no.",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.4",
      "commit": "705cd6a9c90b691b78a18876f1980d4d16fc9b1c",
      "subdirectory": "./ssh-permit-empty-passwords-no/",
      "dependencies": ["library-sshd-config"],
      "steps": [
        "copy ./ssh-permit-empty-passwords-no.cf services/security-hardening/ssh-permit-empty-passwords-no/",
        "json cfbs/def.json def.json"
      ]
    },
    "ssh-permit-root-login-no": {
      "description": "This module ensures that the SSH daemon does not permit logging in as root",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "./ssh-permit-root-login-no/",
      "dependencies": ["library-sshd-config"],
      "steps": [
        "copy ./ssh-permit-root-login-no.cf services/security-hardening/ssh-permit-root-login-no/",
        "json cfbs/def.json def.json"
      ]
    },
    "ssh-protocol-2": {
      "description": "This module ensures that the SSH daemon uses SSH protocol 2.",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "./ssh-protocol-2/",
      "dependencies": ["library-sshd-config"],
      "steps": [
        "copy ./ssh-protocol-2.cf services/security-hardening/ssh-protocol-2/",
        "json cfbs/def.json def.json"
      ]
    },
    "sudo-enforce-allowed-users": {
      "description": "This module ensures the following lines 'ALL ALL=(ALL) ALL' and 'ALL ALL=(ALL:ALL) ALL' are not present in /etc/sudoers.conf",
      "tags": ["security", "management", "sudo", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.2",
      "commit": "ab4f6c01c2f41dfdfef05100eac4c8abf894b74c",
      "subdirectory": "./sudo-enforce-allowed-users/",
      "steps": [
        "copy ./sudo-enforce-allowed-users.cf services/security-hardening/sudo-enforce-allowed-users/",
        "json cfbs/def.json def.json"
      ]
    },
    "sudo-requires-passwords": {
      "description": "This module ensures that sudo requires password (there are no 'NOPASSWD' in /etc/sudoers)",
      "tags": ["security", "management", "sudo", "experimental"],
      "repo": "https://github.com/Lex-2008/sudo-requires-passwords",
      "by": "https://github.com/Lex-2008",
      "version": "1.0.0",
      "commit": "ff6108188291ae2e8074d2fa55786e4270e803af",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./sudo-requires-password.cf services/autorun/sudo-requires-password.cf"
      ]
    },
    "surf-cfengine-library": {
      "description": "SURF CFEngine Library (SCL) for building services with json/mustache",
      "tags": ["inventory", "lib", "management", "experimental"],
      "repo": "https://github.com/basvandervlies/cf_surfsara_lib",
      "by": "https://github.com/basvandervlies/",
      "version": "1.4.1",
      "commit": "4a48cdb21305e062c41897cbea4bfa60d5b20cff",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./masterfiles/lib/scl/ lib/scl/",
        "copy ./masterfiles/services/autorun/scl.cf services/autorun/scl.cf",
        "copy ./modules/ modules/scl/",
        "copy ./scl_example.json scl_example.json",
        "copy ./services/ services/scl/",
        "copy ./templates/ lib/scl/.git/templates",
        "json scl_example.json def.json"
      ]
    },
    "systemd": { "alias": "promise-type-systemd" },
    "telnet-server-not-installed": {
      "description": "This module ensures the telnet server package is not installed on the system",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.2",
      "commit": "2092c748f5c1a6e3b5b1aeacd486fa38ba862226",
      "subdirectory": "telnet-server-not-installed",
      "dependencies": ["autorun"],
      "steps": [
        "copy ./telnet_server_policy.cf services/autorun/telnet_server_policy.cf"
      ]
    },
    "tmp-file-age": {
      "description": "This module inventories and manages old files in /tmp.",
      "tags": ["supported", "inventory", "management", "security", "tmp"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "56a7c149f33808db6796de77eff6eb0502c01e61",
      "subdirectory": "./tmp-file-age/",
      "steps": [
        "copy ./tmp-file-age.cf services/security-hardening/tmp-file-age/",
        "json cfbs/def.json def.json"
      ]
    },
    "tmp-nosuid": {
      "description": "This module has a policy file which makes sure /tmp is mounted with the 'nosuid' option",
      "tags": ["supported", "security", "compliance", "tmp"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.2",
      "commit": "5be7c3ef332138b5717231d289bda59449b66d5c",
      "subdirectory": "tmp-nosuid",
      "dependencies": ["autorun"],
      "steps": ["copy ./tmp_nosuid.cf services/autorun/tmp_nosuid.cf"]
    }
  }
}
